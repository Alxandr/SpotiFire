<Window x:Class="SpotiFire.SpotiClient.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:s="clr-namespace:System;assembly=mscorlib"
        xmlns:vc="clr-namespace:SpotiFire.SpotiClient.ValueConverters"
        Title="MainWindow" Height="500" Width="800" Loaded="Window_Loaded" UseLayoutRounding="True"
        >
    <Window.Resources>
        <vc:StarredValueConverter x:Key="StarredConverter" />
        <vc:VolumeBarsConverter x:Key="VolumeBarsConverter" />
        <Style x:Key="ArtistLink" TargetType="Hyperlink">
            <EventSetter Event="Click" Handler="Artist_Click" />
            <Setter Property="TextDecorations" Value="None" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="TextDecorations" Value="Underline" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="TrackListRowStyle" TargetType="{x:Type ListViewItem}">
            <Setter Property="Background" Value="#313131" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Foreground" Value="#DDDDDD" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <Grid x:Name="background" Margin="0">
                            <Grid.Style>
                                <Style TargetType="Grid">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListViewItem}}" Value="True">
                                            <Setter Property="Background" Value="#A9D9FE" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListViewItem}}" Value="False">
                                            <Setter Property="Background" Value="{Binding Path=Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListViewItem}}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                            <GridViewRowPresenter x:Name="ItemContent" Focusable="False"></GridViewRowPresenter>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <EventSetter Event="MouseDoubleClick" Handler="SpotifySongs_MouseDoubleClick" />
            <Style.Triggers>
                <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                    <Setter Property="FontFamily" Value="FangSong" />
                    <Setter Property="Background" Value="#373737" />
                </Trigger>
                <DataTrigger Binding="{Binding Path=IsAvailable}" Value="False">
                    <Setter Property="Foreground" Value="LightGray" />
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Foreground" Value="#000F1C" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="Slider">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Slider">
                        <ControlTemplate.Resources>
                            <vc:ThumbIndicatorConverter x:Key="ThumbIndicatorConverter" />
                        </ControlTemplate.Resources>
                        <Grid>
                            <Border BorderBrush="#121212" Height="10" CornerRadius="5" BorderThickness="1,1,1,0">
                                <Border BorderBrush="#232323" BorderThickness="0,0,0,1" CornerRadius="5" Background="#2E2E2E">
                                    <Border Background="#404040" CornerRadius="5" HorizontalAlignment="Left" Name="PART_Indicator">
                                        <Border.Width>
                                            <MultiBinding Converter="{StaticResource ResourceKey=ThumbIndicatorConverter}">
                                                <Binding Path="Value" RelativeSource="{RelativeSource AncestorType=Slider}" />
                                                <Binding Path="Minimum" RelativeSource="{RelativeSource AncestorType=Slider}" />
                                                <Binding Path="Maximum" RelativeSource="{RelativeSource AncestorType=Slider}" />
                                                <Binding Path="ActualWidth" ElementName="PART_Track" />
                                                <Binding Path="ActualWidth" RelativeSource="{RelativeSource AncestorType=Slider}" />
                                            </MultiBinding>
                                        </Border.Width>
                                    </Border>
                                </Border>
                            </Border>
                            <Track Name="PART_Track">
                                <Track.Thumb>
                                    <Thumb Name="PART_Thumb">
                                        <Thumb.Template>
                                            <ControlTemplate TargetType="Thumb">
                                                <!--<Ellipse Width="10" Height="10" Fill="#FFFFFF"></Ellipse>-->
                                                <Border BorderBrush="#0A0A0A" BorderThickness="1" CornerRadius="5" Height="10" Width="10" Background="#FFFFFF" />
                                            </ControlTemplate>
                                        </Thumb.Template>
                                    </Thumb>
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    
    <Border CornerRadius="5">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="20" />
                <RowDefinition />
                <RowDefinition Height="50" />
            </Grid.RowDefinitions>

            <Grid Grid.ColumnSpan="2">
                <Grid.Background>
                    <LinearGradientBrush EndPoint="0.504,1.5" StartPoint="0.504,0.03">
                        <GradientStop Color="#C2C2C2" Offset="0"/>
                        <GradientStop Color="#959595" Offset="0.567"/>
                    </LinearGradientBrush>
                </Grid.Background>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Menu Background="Transparent">
                    <MenuItem Header="_File">
                        <MenuItem Header="_New Playlist"></MenuItem>
                        <MenuItem Header="New _Playlist Folder"></MenuItem>
                        <Separator />
                        <MenuItem Header="_Log Out"></MenuItem>
                        <Separator />
                        <MenuItem x:Name="ExitMenuButton" Header="_Exit" Click="ExitMenuButton_Click"></MenuItem>
                    </MenuItem>
                    <MenuItem Header="_Edit"></MenuItem>
                    <MenuItem Header="_View"></MenuItem>
                    <MenuItem Header="_Playback"></MenuItem>
                    <MenuItem Header="_Help"></MenuItem>
                </Menu>

                <StackPanel Grid.Row="1" Grid.ColumnSpan="2" Orientation="Horizontal">
                    <Button Content="Back"></Button>
                    <Button Content="Forward"></Button>
                    <TextBox Width="200" Margin="10,0,0,0"></TextBox>
                    <Button Content="Search"></Button>
                </StackPanel>

                <Border Grid.Row="2" Grid.ColumnSpan="2" Height="2" BorderThickness="0,0,0,1" BorderBrush="#404040" Background="#A5A5A5" />
            </Grid>
        
        
            <Grid Grid.Row="1">
                <Grid.Background>
                    <LinearGradientBrush EndPoint="0.504,1.5" StartPoint="0.504,0.03">
                        <GradientStop Color="#ACACAC" Offset="0"/>
                        <GradientStop Color="#979797" Offset="0.567"/>
                    </LinearGradientBrush>
                </Grid.Background>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
            
                <TextBlock Padding="15,0,0,0" Text="Username" FontWeight="Bold">
                    <TextBlock.Effect>
                        <DropShadowEffect
                            ShadowDepth="1"
                            Direction="330"
                            Color="#DDDDDD"
                            Opacity="0.5"
                            BlurRadius="1"
                            />
                    </TextBlock.Effect>
                </TextBlock>
            </Grid>
        
            <Grid Grid.Column="1" Grid.Row="1">
                <Grid.Background>
                    <LinearGradientBrush EndPoint="0.504,1.5" StartPoint="0.504,0.03">
                        <GradientStop Color="#ACACAC" Offset="0"/>
                        <GradientStop Color="#979797" Offset="0.567"/>
                    </LinearGradientBrush>
                </Grid.Background>
            </Grid>
        
            <TreeView Grid.Row="2" BorderThickness="0" x:Name="SpotifyTree" SelectedItemChanged="SpotifyTree_SelectedItemChanged" Background="#474747"
                      ItemsSource="{Binding Playlists}">
                <TreeView.ItemContainerStyle>
                    <Style TargetType="{x:Type TreeViewItem}">
                        <EventSetter Event="MouseDoubleClick" Handler="SpotifyTree_ItemDoubleClicked" />
                        <Setter Property="Background" Value="Transparent" />
                    </Style>
                </TreeView.ItemContainerStyle>
                <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                        <TextBlock Foreground="#EEEEEE">
                            <TextBlock.Effect>
                                <DropShadowEffect
                                    ShadowDepth="1"
                                    Direction="330"
                                    Color="Black"
                                    Opacity="0.5"
                                    BlurRadius="1" />
                            </TextBlock.Effect>
                            <TextBlock Text="{Binding Name}" />
                        </TextBlock>
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>
            </TreeView>

            <ListView x:Name="SpotifySongs" Grid.Row="2" Grid.Column="1" BorderThickness="0" ItemContainerStyle="{StaticResource ResourceKey=TrackListRowStyle}" Background="#313131">
                <ListView.Resources>
                    <Style TargetType="GridViewColumnHeader">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="GridViewColumnHeader">
                                    <Border BorderThickness="1,1,0,0" BorderBrush="#A4A4A4">
                                        <Border BorderThickness="0,0,1,1" BorderBrush="#646464" Height="17">
                                            <Border.Background>
                                                <LinearGradientBrush EndPoint="0.504,1.5" StartPoint="0.504,0.03">
                                                    <GradientStop Color="#A8A8A8" Offset="0"/>
                                                    <GradientStop Color="#868686" Offset="0.567"/>
                                                </LinearGradientBrush>
                                            </Border.Background>
                                            <TextBlock Text="{TemplateBinding Content}" FontWeight="Bold" Padding="5,0,0,0">
                                                <TextBlock.Effect>
                                                    <DropShadowEffect
                                                        ShadowDepth="1"
                                                        Direction="330"
                                                        Color="#DDDDDD"
                                                        Opacity="0.5"
                                                        BlurRadius="1"
                                                        />
                                                </TextBlock.Effect>
                                            </TextBlock>
                                        </Border>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListView.Resources>
                <ListView.View>
                    <GridView AllowsColumnReorder="False">
                        <GridViewColumn Width="25" Header="">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <Image Source="{Binding Path=IsStarred, Converter={StaticResource ResourceKey=StarredConverter}}" Height="13" Width="13" Margin="0" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Width="150" Header="Track" DisplayMemberBinding="{Binding Path=Name}"></GridViewColumn>
                        <GridViewColumn Width="150" Header="Artist">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <ListView ItemsSource="{Binding Path=Artists}" BorderThickness="0" ScrollViewer.CanContentScroll="False" ScrollViewer.HorizontalScrollBarVisibility="Disabled" Background="Transparent">
                                        <ListView.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <StackPanel Orientation="Horizontal" CanHorizontallyScroll="False" CanVerticallyScroll="False" ClipToBounds="True"
                                                            Background="Transparent">
                                                </StackPanel>
                                            </ItemsPanelTemplate>
                                        </ListView.ItemsPanel>
                                        <ListView.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock>
                                                    <Hyperlink NavigateUri="{Binding Path=Link}" Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=ListViewItem, AncestorLevel=2}}"
                                                               Background="Transparent" Style="{StaticResource ResourceKey=ArtistLink}">
                                                        <TextBlock Text="{Binding Path=Name}" />
                                                    </Hyperlink>
                                                </TextBlock>
                                            </DataTemplate>
                                        </ListView.ItemTemplate>
                                    </ListView>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Width="50" Header="Time">
                            <GridViewColumn.DisplayMemberBinding>
                                <Binding Path="Length">
                                    <Binding.StringFormat>mm\:ss</Binding.StringFormat>
                                </Binding>
                            </GridViewColumn.DisplayMemberBinding>
                        </GridViewColumn>
                        <GridViewColumn Width="150" Header="Album" DisplayMemberBinding="{Binding Path=Album}"></GridViewColumn>
                    </GridView>
                </ListView.View>
            </ListView>
        
            <Grid Grid.Row="3" Grid.Column="0" Background="#505050" Grid.ColumnSpan="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="35" />
                    <ColumnDefinition Width="40" />
                    <ColumnDefinition Width="35" />
                    <ColumnDefinition Width="80" />
                    <ColumnDefinition Width="25" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="50" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="50" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="35" />
                    <ColumnDefinition Width="35" />
                </Grid.ColumnDefinitions>

                <Button x:Name="PrevButton" Margin="10,0,0,0" IsEnabled="{Binding CanGoBack}">
                    <Button.Template>
                        <ControlTemplate>
                            <Image Height="25" Width="25">
                                <Image.Style>
                                    <Style TargetType="Image">
                                        <Setter Property="Source" Value="Images/previous_button.png" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType=Button}}" Value="False">
                                                <Setter Property="Source" Value="Images/previous_button_disabled.png" />
                                            </DataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType=Button}}" Value="True" />
                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource AncestorType=Button}}" Value="True" />
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="Source" Value="Images/previous_button_pressed.png" />
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
                <ToggleButton x:Name="PlayPauseButton" Grid.Column="1" Click="PlayPauseButton_Click" IsChecked="{Binding IsPlaying, Mode=TwoWay}" IsEnabled="{Binding CanStartPlayback}">
                    <ToggleButton.Template>
                        <ControlTemplate>
                            <Image Height="32">
                                <Image.Style>
                                    <Style TargetType="Image">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType=ToggleButton}}" Value="False">
                                                <Setter Property="Source" Value="Images/play_button.png" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType=ToggleButton}}" Value="True">
                                                <Setter Property="Source" Value="Images/pause_button.png" />
                                            </DataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType=ToggleButton}}" Value="False" />
                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType=ToggleButton}}" Value="False" />
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="Source" Value="Images/play_button_disabled.png" />
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType=ToggleButton}}" Value="True" />
                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType=ToggleButton}}" Value="False" />
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="Source" Value="Images/pause_button_disabled.png" />
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType=ToggleButton}}" Value="False" />
                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType=ToggleButton}}" Value="True" />
                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource AncestorType=ToggleButton}}" Value="True" />
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="Source" Value="Images/play_button_pressed.png" />
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType=ToggleButton}}" Value="True" />
                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType=ToggleButton}}" Value="True" />
                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource AncestorType=ToggleButton}}" Value="True" />
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="Source" Value="Images/pause_button_pressed.png" />
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                        </ControlTemplate>
                    </ToggleButton.Template>
                </ToggleButton>
                <Button x:Name="NextButton" Grid.Column="2" Margin="0,0,10,0" IsEnabled="{Binding CanGoNext}">
                    <Button.Template>
                        <ControlTemplate>
                            <Image Height="25" Width="25">
                                <Image.Style>
                                    <Style TargetType="Image">
                                        <Setter Property="Source" Value="Images/next_button.png" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType=Button}}" Value="False">
                                                <Setter Property="Source" Value="Images/next_button_disabled.png" />
                                            </DataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType=Button}}" Value="True" />
                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource AncestorType=Button}}" Value="True" />
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="Source" Value="Images/next_button_pressed.png" />
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
                <Slider x:Name="VolumeSlider" Orientation="Horizontal" Minimum="0" Maximum="100"
                        Grid.Column="3" VerticalAlignment="Center" ValueChanged="VolumeSlider_ValueChanged"
                        Value="{Binding Volume}"/>
            
                <Canvas Grid.Column="4">
                    <!--<Line X1="8" Y1="17" X2="8" Y2="33" Stroke="White" StrokeThickness="4" />-->
                    <Path Stroke="White" StrokeThickness="2" Opacity="{Binding ElementName=VolumeSlider, Path=Value, Converter={StaticResource ResourceKey=VolumeBarsConverter}, ConverterParameter=0}">
                        <Path.Data>
                            <PathGeometry>
                                <PathFigure StartPoint="4,30">
                                    <ArcSegment Point="4,20" Size="200,50" RotationAngle="0" IsLargeArc="False" />
                                </PathFigure>
                            </PathGeometry>
                        </Path.Data>
                    </Path>
                    <Path Stroke="White" StrokeThickness="2" Opacity="{Binding ElementName=VolumeSlider, Path=Value, Converter={StaticResource ResourceKey=VolumeBarsConverter}, ConverterParameter=1}">
                        <Path.Data>
                            <PathGeometry>
                                <PathFigure StartPoint="8,32">
                                    <ArcSegment Point="8,18" Size="200,55" RotationAngle="0" IsLargeArc="False" />
                                </PathFigure>
                            </PathGeometry>
                        </Path.Data>
                    </Path>
                    <Path Stroke="White" StrokeThickness="2" Opacity="{Binding ElementName=VolumeSlider, Path=Value, Converter={StaticResource ResourceKey=VolumeBarsConverter}, ConverterParameter=2}">
                        <Path.Data>
                            <PathGeometry>
                                <PathFigure StartPoint="12,34">
                                    <ArcSegment Point="12,16" Size="200,60" RotationAngle="0" IsLargeArc="False" />
                                </PathFigure>
                            </PathGeometry>
                        </Path.Data>
                    </Path>
                </Canvas>

                <Border Grid.Column="5" Width="2" BorderThickness="1,0,0,0" BorderBrush="#343434" Background="#5E5E5E" />

                <TextBlock Grid.Column="6" x:Name="SongProgress" Text="00:00" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#FFFFFF" />
                <Slider x:Name="ProgressSlider" Minimum="0" Maximum="0" Grid.Column="7" Orientation="Horizontal" VerticalAlignment="Center" />
                <TextBlock x:Name="SongTotalLength" Text="00:00" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="8" Foreground="#FFFFFF" />

                <Border Grid.Column="9" Width="2" BorderThickness="1,0,0,0" BorderBrush="#343434" Background="#5E5E5E" />

                <ToggleButton x:Name="ShuffleButton" Content="Rnd" Grid.Column="10" IsChecked="{Binding Shuffle, Mode=TwoWay}" Checked="ShuffleButton_Checked" Unchecked="ShuffleButton_Checked">
                    <ToggleButton.Template>
                        <ControlTemplate>
                            <Image Width="32" Height="32">
                                <Image.Style>
                                    <Style TargetType="Image">
                                        <Setter Property="Source" Value="Images/shuffle_button_active.png" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsChecked, RelativeSource={RelativeSource AncestorType=ToggleButton}}" Value="False">
                                                <Setter Property="Source" Value="Images/shuffle_button_inactive.png" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource AncestorType=ToggleButton}}" Value="True">
                                                <Setter Property="Source" Value="Images/shuffle_button_pressed.png" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                        </ControlTemplate>
                    </ToggleButton.Template>
                </ToggleButton>
                <ToggleButton x:Name="RepeatButton" Content="Rep" Grid.Column="11" IsChecked="{Binding Repeat, Mode=TwoWay}" Checked="RepeatButton_Checked" Unchecked="RepeatButton_Checked">
                    <ToggleButton.Template>
                        <ControlTemplate>
                            <Image Width="32" Height="32">
                                <Image.Style>
                                    <Style TargetType="Image">
                                        <Setter Property="Source" Value="Images/repeat_button_active.png" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsChecked, RelativeSource={RelativeSource AncestorType=ToggleButton}}" Value="False">
                                                <Setter Property="Source" Value="Images/repeat_button_inactive.png" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource AncestorType=ToggleButton}}" Value="True">
                                                <Setter Property="Source" Value="Images/repeat_button_pressed.png" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                        </ControlTemplate>
                    </ToggleButton.Template>
                </ToggleButton>
            </Grid>
        </Grid>
    </Border>
</Window>
