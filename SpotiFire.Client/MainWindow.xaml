<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:s="clr-namespace:System;assembly=mscorlib"
        xmlns:vc="clr-namespace:SpotiFire.SpotiClient.ValueConverters"
        xmlns:vm="clr-namespace:SpotiFire.SpotiClient.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:local="clr-namespace:SpotiFire.SpotiClient" mc:Ignorable="d" x:Class="SpotiFire.SpotiClient.MainWindow"
        Title="MainWindow" Height="500" Width="800" Loaded="Window_Loaded" UseLayoutRounding="True"
        >
    <Window.Resources>
        <vc:StarredValueConverter x:Key="StarredConverter" />
        <vc:VolumeBarsConverter x:Key="VolumeBarsConverter" />
        <vc:TimeSpanSecondsConverter x:Key="TimeSpanSecondsConverter" />
        <Style x:Key="ArtistLink" TargetType="{x:Type Hyperlink}">
            <Setter Property="TextDecorations" Value="None" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="TextDecorations" Value="Underline" />
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <Style TargetType="{x:Type Slider}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Slider}">
                        <ControlTemplate.Resources>
                            <vc:ThumbIndicatorConverter x:Key="ThumbIndicatorConverter" />
                        </ControlTemplate.Resources>
                        <Grid>
                            <Border BorderBrush="#121212" Height="10" CornerRadius="5" BorderThickness="1,1,1,0">
                                <Border BorderBrush="#232323" BorderThickness="0,0,0,1" CornerRadius="5" Background="#2E2E2E">
                                    <Border Background="#404040" CornerRadius="5" HorizontalAlignment="Left" x:Name="PART_Indicator">
                                        <Border.Width>
                                            <MultiBinding Converter="{StaticResource ResourceKey=ThumbIndicatorConverter}">
                                                <Binding Path="Value" RelativeSource="{RelativeSource AncestorType={x:Type Slider}}" />
                                                <Binding Path="Minimum" RelativeSource="{RelativeSource AncestorType={x:Type Slider}}" />
                                                <Binding Path="Maximum" RelativeSource="{RelativeSource AncestorType={x:Type Slider}}" />
                                                <Binding Path="ActualWidth" ElementName="PART_Track" />
                                                <Binding Path="ActualWidth" RelativeSource="{RelativeSource AncestorType={x:Type Slider}}" />
                                            </MultiBinding>
                                        </Border.Width>
                                    </Border>
                                </Border>
                            </Border>
                            <Track x:Name="PART_Track">
                                <Track.Thumb>
                                    <Thumb x:Name="PART_Thumb">
                                        <Thumb.Template>
                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                <Border BorderBrush="#0A0A0A" BorderThickness="1" CornerRadius="5" Height="10" Width="10" Background="#FFFFFF" />
                                            </ControlTemplate>
                                        </Thumb.Template>
                                    </Thumb>
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    
    <Border CornerRadius="5">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="20" />
                <RowDefinition />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="50" />
            </Grid.RowDefinitions>

            <Grid Grid.ColumnSpan="2">
                <Grid.Background>
                    <LinearGradientBrush EndPoint="0.504,1.5" StartPoint="0.504,0.03">
                        <GradientStop Color="#C2C2C2" Offset="0"/>
                        <GradientStop Color="#959595" Offset="0.567"/>
                    </LinearGradientBrush>
                </Grid.Background>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Menu Background="Transparent">
                    <MenuItem Header="_File">
                        <MenuItem Header="_New Playlist"/>
                        <MenuItem Header="New _Playlist Folder"/>
                        <Separator />
                        <MenuItem Header="_Log Out"/>
                        <Separator />
                        <MenuItem x:Name="ExitMenuButton" Header="_Exit"/>
                    </MenuItem>
                    <MenuItem Header="_Edit"/>
                    <MenuItem Header="_View"/>
                    <MenuItem Header="_Playback"/>
                    <MenuItem Header="_Help"/>
                </Menu>

                <StackPanel Grid.Row="1" Grid.ColumnSpan="2" Orientation="Horizontal">
                    <Button Content="Back"/>
                    <Button Content="Forward"/>
                    <TextBox Width="200" Margin="10,0,0,0"/>
                    <Button Content="Search"/>
                </StackPanel>

                <Border Grid.Row="2" Grid.ColumnSpan="2" Height="2" BorderThickness="0,0,0,1" BorderBrush="#404040" Background="#A5A5A5" />
            </Grid>
        
        
            <Grid Grid.Row="1">
                <Grid.Background>
                    <LinearGradientBrush EndPoint="0.504,1.5" StartPoint="0.504,0.03">
                        <GradientStop Color="#ACACAC" Offset="0"/>
                        <GradientStop Color="#979797" Offset="0.567"/>
                    </LinearGradientBrush>
                </Grid.Background>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
            
                <TextBlock Padding="15,0,0,0" Text="Username" FontWeight="Bold">
                    <TextBlock.Effect>
                        <DropShadowEffect
                            ShadowDepth="1"
                            Direction="330"
                            Color="#DDDDDD"
                            Opacity="0.5"
                            BlurRadius="1"
                            />
                    </TextBlock.Effect>
                </TextBlock>

                <Border Width="1" Grid.Column="2" Grid.RowSpan="2" BorderThickness="1" BorderBrush="#292929" />
                <Border Height="1" Grid.ColumnSpan="2" Grid.Row="1" BorderBrush="#292929" BorderThickness="0,0,0,1" />
            </Grid>
        
            <Grid Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
            	<TreeView Grid.Row="2" BorderThickness="0" x:Name="SpotifyTree" Background="#474747"
            		ItemsSource="{Binding Playlists}" Padding="5">
            		<TreeView.Resources>
                        <ResourceDictionary>
                            <ResourceDictionary.MergedDictionaries>
                                <ResourceDictionary Source="SpotifyPlaylistTree.xaml" />
                            </ResourceDictionary.MergedDictionaries>
                        </ResourceDictionary>
                    </TreeView.Resources>
                    <TreeView.ItemTemplate>
                        <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                            <TextBlock Padding="2"><TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Foreground" Value="#EEEEEE" />
                                        <Setter Property="Effect">
                                            <Setter.Value>
                                                <DropShadowEffect
                                                    ShadowDepth="1"
                                                    Direction="330"
                                                    Color="Black"
                                                    Opacity="0.5"
                                                    BlurRadius="1" />
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="True">
                                                <Setter Property="Foreground" Value="#000000" />
                                                <Setter Property="FontWeight" Value="Bold" />
                                                <Setter Property="Effect" Value="{x:Null}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style><InlineUIContainer>
                            		<TextBlock Text="{Binding Name}" />
                            	</InlineUIContainer></TextBlock>
                        </HierarchicalDataTemplate>
                    </TreeView.ItemTemplate>
            	</TreeView>
                
                <Border Width="1" Grid.Column="1" BorderThickness="1" BorderBrush="#292929" />
            </Grid>

            <TabControl Grid.Row="1" Grid.Column="1" Grid.RowSpan="2" Background="#313131" ItemsSource="{Binding CurrentView.Tabs}" SelectedIndex="{Binding CurrentView.SelectedTabIndex, Mode=TwoWay}" BorderThickness="0">
            </TabControl>

            <Border Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" Height="2" Background="#787878" BorderBrush="#292929" BorderThickness="0,1,0,0" />
        
            <Grid Grid.Row="4" Grid.Column="0" Background="#505050" Grid.ColumnSpan="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="35" />
                    <ColumnDefinition Width="40" />
                    <ColumnDefinition Width="35" />
                    <ColumnDefinition Width="80" />
                    <ColumnDefinition Width="25" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="50" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="50" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="35" />
                    <ColumnDefinition Width="35" />
                </Grid.ColumnDefinitions>

                <Button x:Name="PrevButton" Margin="10,0,0,0" IsEnabled="{Binding CanGoBack}">
                    <Button.Template>
                        <ControlTemplate>
                            <Image Height="25" Width="25">
                                <Image.Style>
                                    <Style TargetType="{x:Type Image}">
                                        <Setter Property="Source" Value="Images/previous_button.png" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" Value="False">
                                                <Setter Property="Source" Value="Images/previous_button_disabled.png" />
                                            </DataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" Value="True" />
                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" Value="True" />
                                                </MultiDataTrigger.Conditions>
                                            	<Setter Property="Source" Value="Images/previous_button_pressed.png" />
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
                <ToggleButton x:Name="PlayPauseButton" Grid.Column="1" IsChecked="{Binding IsPlaying, Mode=TwoWay}" Command="{Binding PlayPauseCommand}">
                    <ToggleButton.Template>
                        <ControlTemplate>
                            <Image Height="32">
                                <Image.Style>
                                    <Style TargetType="{x:Type Image}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" Value="False">
                                                <Setter Property="Source" Value="Images/play_button.png" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" Value="True">
                                                <Setter Property="Source" Value="Images/pause_button.png" />
                                            </DataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" Value="False" />
                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" Value="False" />
                                                </MultiDataTrigger.Conditions>
                                            	<Setter Property="Source" Value="Images/play_button_disabled.png" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" Value="True" />
                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" Value="False" />
                                                </MultiDataTrigger.Conditions>
                                            	<Setter Property="Source" Value="Images/pause_button_disabled.png" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" Value="False" />
                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" Value="True" />
                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" Value="True" />
                                                </MultiDataTrigger.Conditions>
                                            	<Setter Property="Source" Value="Images/play_button_pressed.png" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" Value="True" />
                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" Value="True" />
                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" Value="True" />
                                                </MultiDataTrigger.Conditions>
                                            	<Setter Property="Source" Value="Images/pause_button_pressed.png" />
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                        </ControlTemplate>
                    </ToggleButton.Template>
                </ToggleButton>
                <Button x:Name="NextButton" Grid.Column="2" Margin="0,0,10,0" IsEnabled="{Binding CanGoNext}">
                    <Button.Template>
                        <ControlTemplate>
                            <Image Height="25" Width="25">
                                <Image.Style>
                                    <Style TargetType="{x:Type Image}">
                                        <Setter Property="Source" Value="Images/next_button.png" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" Value="False">
                                                <Setter Property="Source" Value="Images/next_button_disabled.png" />
                                            </DataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" Value="True" />
                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" Value="True" />
                                                </MultiDataTrigger.Conditions>
                                            	<Setter Property="Source" Value="Images/next_button_pressed.png" />
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
                <Slider x:Name="VolumeSlider" Orientation="Horizontal" Minimum="0" Maximum="100"
                        Grid.Column="3" VerticalAlignment="Center"
                        Value="{Binding Volume}"/>
            
                <Canvas Grid.Column="4">
                    <Path Stroke="White" StrokeThickness="2" Opacity="{Binding Value, ConverterParameter=0, Converter={StaticResource ResourceKey=VolumeBarsConverter}, ElementName=VolumeSlider}" Data="M4,30 A200,50,0,0,0,4,20"/>
                    <Path Stroke="White" StrokeThickness="2" Opacity="{Binding Value, ConverterParameter=1, Converter={StaticResource ResourceKey=VolumeBarsConverter}, ElementName=VolumeSlider}" Data="M8,32 A200,55,0,0,0,8,18"/>
                    <Path Stroke="White" StrokeThickness="2" Opacity="{Binding Value, ConverterParameter=2, Converter={StaticResource ResourceKey=VolumeBarsConverter}, ElementName=VolumeSlider}" Data="M12,34 A200,60,0,0,0,12,16"/>
                </Canvas>

                <Border Grid.Column="5" Width="2" BorderThickness="1,0,0,0" BorderBrush="#343434" Background="#5E5E5E" />

                <TextBlock Grid.Column="6" x:Name="SongProgress" Text="00:00" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#FFFFFF" />
                <Slider x:Name="ProgressSlider" Minimum="0" Maximum="{Binding Track.Length, Mode=OneWay, Converter={StaticResource TimeSpanSecondsConverter}}" Value="{Binding CurrentTime, Mode=OneWay, Converter={StaticResource TimeSpanSecondsConverter}}" Grid.Column="7" Orientation="Horizontal" VerticalAlignment="Center" />
                <TextBlock x:Name="SongTotalLength" Text="00:00" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="8" Foreground="#FFFFFF" />

                <Border Grid.Column="9" Width="2" BorderThickness="1,0,0,0" BorderBrush="#343434" Background="#5E5E5E" />

                <ToggleButton x:Name="ShuffleButton" Content="Rnd" Grid.Column="10" IsChecked="{Binding Shuffle, Mode=TwoWay}">
                    <ToggleButton.Template>
                        <ControlTemplate>
                            <Image Width="32" Height="32">
                                <Image.Style>
                                    <Style TargetType="{x:Type Image}">
                                        <Setter Property="Source" Value="Images/shuffle_button_active.png" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" Value="False">
                                                <Setter Property="Source" Value="Images/shuffle_button_inactive.png" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsPressed, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" Value="True">
                                                <Setter Property="Source" Value="Images/shuffle_button_pressed.png" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                        </ControlTemplate>
                    </ToggleButton.Template>
                </ToggleButton>
                <ToggleButton x:Name="RepeatButton" Content="Rep" Grid.Column="11" IsChecked="{Binding Repeat, Mode=TwoWay}">
                    <ToggleButton.Template>
                        <ControlTemplate>
                            <Image Width="32" Height="32">
                                <Image.Style>
                                    <Style TargetType="{x:Type Image}">
                                        <Setter Property="Source" Value="Images/repeat_button_active.png" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" Value="False">
                                                <Setter Property="Source" Value="Images/repeat_button_inactive.png" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsPressed, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" Value="True">
                                                <Setter Property="Source" Value="Images/repeat_button_pressed.png" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                        </ControlTemplate>
                    </ToggleButton.Template>
                </ToggleButton>
            </Grid>
        </Grid>
    </Border>
</Window>
